@using teko_projektarbeit_loesungsalgorithmen.Services
@using teko_projektarbeit_loesungsalgorithmen.Objects

@inject DataService DataService
@inject NavigationManager NavigationManager
@inject SessionService SessionService

<div class="card">
    <div class="card-header">
        <h3>@(EditInstance == null ? "New Project" : "Edit Project")</h3>
    </div>
    <div class="card-body">
        <label>Projektname:</label>
        <input @bind="EditInstance.Name" class="form-control" />

        <label>Kundenname:</label>
        <input @bind="EditInstance.CustomerName" class="form-control" />

        <label>Beschreibung:</label>
        <input @bind="EditInstance.Description" class="form-control" />

        <button @onclick="SaveProject" class="btn btn-primary">Save</button>
    </div>
</div>

@code {
    [Parameter]
    public int ProjectId { get; set; }

    private Objects.Project EditInstance;

    protected override async Task OnInitializedAsync()
    {
        List<Objects.Project> projectList = DataService.GetProjectById(ProjectId, 1);

        if (projectList.Count > 0)
        {
            EditInstance = projectList[0];
        } else
        {
            EditInstance = new Objects.Project(0, "", 0, "", "");
        }
    }

    private async Task SaveProject()
    {
        Console.WriteLine("save project");
        List<Objects.Project> tempProjects = DataService.Projects;

        if (EditInstance.Id != 0) {
            // Increase version number if it is an update
            EditInstance.Version++;
        } else {
            EditInstance.Id = DataService.GetNewId(); 
            EditInstance.ProjectLeadId = (int) await SessionService.GetUserId();
        }

        tempProjects.Add(EditInstance);

        DataService.Projects = tempProjects;

        NavigationManager.NavigateTo("/");
    }
}
